---
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />

    <meta property="og:image" content="" />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="profile" />
    <meta property="profile:first_name" content="Sarim" />
    <meta property="profile:last_name" content="Hasan" />
    <meta property="og:url" content="" />
    <meta property="og:description" content={description} />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:site" content="@sarim_hsan" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="" />

    <link rel="icon" type="image/svg+xml" href="/logo.png" />
    <link rel="canonical" href="" />

    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');

  body {
    font-family: 'Inter', sans-serif;
  }

  h1 {
    @apply text-tt-light dark:text-tt-dark;
    font-size: 30px;
  }
  p {
    @apply text-tt-light dark:text-tt-dark;
    font-size: 21px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleThemeButton = document.querySelector('#toggle-theme');
    const htmlElement = document.documentElement;

    const toggleTheme = () => {
      htmlElement.classList.toggle('dark');
    };

    toggleThemeButton.addEventListener('click', toggleTheme);

    // Set the initial state based on the current theme
    if (htmlElement.classList.contains('dark')) {
      document.querySelector('#moon-icon').classList.add('hidden');
      document.querySelector('#sun-icon').classList.remove('hidden');
    } else {
      document.querySelector('#moon-icon').classList.remove('hidden');
      document.querySelector('#sun-icon').classList.add('hidden');
    }

    // Update the icons when the theme changes
    toggleThemeButton.addEventListener('click', () => {
      document.querySelector('#moon-icon').classList.toggle('hidden');
      document.querySelector('#sun-icon').classList.toggle('hidden');
    });
  });
</script>
